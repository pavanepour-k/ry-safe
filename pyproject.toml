[build-system]
requires = ["maturin>=1.4,<2.0"]
build-backend = "maturin"

[project]
name = "rysafe"
version = "0.1.0"
description = "High-performance HTML/XML escaping library for Python, implemented in Rust"
license = {text = "MIT"}
readme = "README.md"
keywords = ["html", "xml", "escaping", "security", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: XML",
    "Topic :: Security",
]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
fastapi = ["fastapi>=0.68.0"]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "maturin>=1.4,<2.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "markupsafe>=2.0",  # For compatibility testing
    "fastapi>=0.68.0",
    "httpx>=0.24.0",    # For FastAPI testing
]

[project.urls]
"Bug Reports" = "https://github.com/pavanepour-k/rysafe/issues"
"Source" = "https://github.com/pavanepour-k/rysafe"
"Documentation" = "https://github.com/pavanepour-k/rysafe#readme"

[tool.maturin]
python-source = "python_bindings"
module-name = "rysafe._rysafe"
strip = true
features = ["pyo3/extension-module"]

[tool.black]
line-length = 80
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
line-length = 80
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = []